---
title: "Categorical Encoding"
code-fold: false
---

# Ejemplo de categorical encoding

## Importando las librerías
```{python}
import pandas as pd
from sklearn.preprocessing import LabelEncoder, OneHotEncoder,OrdinalEncoder,StandardScaler, MinMaxScaler
from sklearn.compose import ColumnTransformer
```

## Dataframe de ejemplo

```{python}

data = {
    'size':['M','S','L'], #categorico ordinal = OrdinalEncoder()
    'color':['green','red','blue'], #categorico nominal = OneHotEncoder()
    'price':[10.1, 13.5, 15.6], #numerico continuo = StandardEncoder()
    'label':['pantalones','camisetas','camisetas'] #etiqueta = LabelEncoder()
}

df = pd.DataFrame(data)
df
```

## LabelEncoder(): usar solo en la columna de `output`

```{python}
df['label_encoded'] = LabelEncoder().fit_transform(df['label'])
df
```

##  OrdinalEncoder(): usar en columnas categoricas ordinasl, donde los valores tienen un orden natural (e.g., S < M < L)


```{python}

size_order = [['S','M','L']]
df['size_encoded'] = OrdinalEncoder(categories=size_order).fit_transform(df[['size']])
df
```

## OneHotEncoder(): usar para las columnas categoricas nominales, donde los valores no tienen un orden


```{python}

color_encoder = OneHotEncoder(sparse_output=False,handle_unknown='ignore')
color_encoded = color_encoder.fit_transform(df[['color']])

color_title_encoded = color_encoder.get_feature_names_out(['color'])

df[color_title_encoded] = color_encoded
df

```

# ColumnTransformer

## Creación del preprocesor
```{python}

categorical_features = ['color']
ordinal_features = ['size']
numerical_features = ['price']

size_order = [['S','M','L']]

preprocessor = ColumnTransformer(
    transformers=[
        ('color_onehot',OneHotEncoder(),categorical_features), 
        ('size_ordenc',OrdinalEncoder(categories=size_order),ordinal_features),
        ('price_stan',StandardScaler(),numerical_features)
    ]
)

```

## Aplicar el preprocesor


```{python}
features_transformed = preprocessor.fit_transform(df)
features_transformed
```